{"version":3,"sources":["logo.svg","App.tsx","index.tsx"],"names":["module","exports","otCore","AccCore","require","App","props","state","connected","active","publishers","subscribers","meta","localAudioEnabled","localVideoEnabled","startCall","bind","endCall","toggleLocalAudio","toggleLocalVideo","urlParams","URLSearchParams","window","location","search","apiKey","get","sessionId","token","credentials","streamContainers","pubSub","type","data","stream","publisher","camera","screen","subscriber","controlsContainer","connect","then","setState","forEach","event","on","catch","error","console","log","this","start","sharingScreen","viewingSharedScreen","activeCameraSubscribers","activeCameraSubscribersGt2","activeCameraSubscribersOdd","screenshareActive","controlClass","classNames","hidden","localAudioClass","muted","localVideoClass","localCallClass","cameraPublisherClass","small","left","screenPublisherClass","cameraSubscriberClass","screenSubscriberClass","containerClasses","className","src","logo","alt","onClick","id","style","position","bottom","width","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84812868.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cd18bdec.svg\";","//  @ts-nocheck\n\nimport React, { Component } from 'react';\nimport Spinner from 'react-spinner';\nimport classNames from 'classnames';\n\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst AccCore = require('opentok-accelerator-core/dist/core');\n\nlet otCore;\n\nconst containerClasses = (state) => {\n    const { active, meta, localAudioEnabled, localVideoEnabled } = state;\n    const sharingScreen = meta ? !!meta.publisher.screen : false;\n    const viewingSharedScreen = meta ? meta.subscriber.screen : false;\n    const activeCameraSubscribers = meta ? meta.subscriber.camera : 0;\n    const activeCameraSubscribersGt2 = activeCameraSubscribers > 2;\n    const activeCameraSubscribersOdd = activeCameraSubscribers % 2;\n    const screenshareActive = viewingSharedScreen || sharingScreen;\n    return {\n        controlClass: classNames('App-control-container', { hidden: !active }),\n        localAudioClass: classNames('ots-video-control circle audio', { hidden: !active, muted: !localAudioEnabled }),\n        localVideoClass: classNames('ots-video-control circle video', { hidden: !active, muted: !localVideoEnabled }),\n        localCallClass: classNames('ots-video-control circle end-call', { hidden: !active }),\n        cameraPublisherClass: classNames('video-container', { hidden: !active, small: !!activeCameraSubscribers || screenshareActive, left: screenshareActive }),\n        screenPublisherClass: classNames('video-container', { hidden: !active || !sharingScreen }),\n        cameraSubscriberClass: classNames('video-container', { hidden: !active || !activeCameraSubscribers },\n            { 'active-gt2': activeCameraSubscribersGt2 && !screenshareActive },\n            { 'active-odd': activeCameraSubscribersOdd && !screenshareActive },\n            { small: screenshareActive }\n        ),\n        screenSubscriberClass: classNames('video-container', { hidden: !viewingSharedScreen || !active }),\n    };\n};\n\nconst connectingMask = () =>\n    <div className=\"App-mask\">\n        <Spinner />\n        <div className=\"message with-spinner\">Connecting</div>\n    </div>;\n\nconst startCallMask = start =>\n    <div className=\"App-mask\">\n        <button className=\"message button clickable\" onClick={start}>Click to Start Call </button>\n    </div>;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: false,\n            active: false,\n            publishers: null,\n            subscribers: null,\n            meta: null,\n            localAudioEnabled: true,\n            localVideoEnabled: true,\n        };\n        this.startCall = this.startCall.bind(this);\n        this.endCall = this.endCall.bind(this);\n        this.toggleLocalAudio = this.toggleLocalAudio.bind(this);\n        this.toggleLocalVideo = this.toggleLocalVideo.bind(this);\n    }\n\n    componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const apiKey = urlParams.get('apiKey');\n        const sessionId = urlParams.get('sessionId');\n        const token = urlParams.get('token');\n\n        const otCoreOptions = {\n            credentials: { apiKey, sessionId, token },\n            streamContainers(pubSub, type, data, stream) {\n                return {\n                    publisher: {\n                        camera: '#cameraPublisherContainer',\n                        screen: '#screenPublisherContainer',\n                    },\n                    subscriber: {\n                        camera: '#cameraSubscriberContainer',\n                        screen: '#screenSubscriberContainer',\n                    },\n                }[pubSub][type];\n            },\n            controlsContainer: '#controls',\n        };\n\n        otCore = new AccCore(otCoreOptions);\n\n        otCore.connect().then(() => this.setState({ connected: true }));\n\n        const events = [\n            'subscribeToCamera',\n            'unsubscribeFromCamera',\n            'subscribeToScreen',\n            'unsubscribeFromScreen',\n            'startScreenShare',\n            'endScreenShare',\n        ];\n\n        events.forEach(event => otCore.on(event, ({ publishers, subscribers, meta }) => {\n            this.setState({ publishers, subscribers, meta });\n        }));\n    }\n\n    startCall() {\n        otCore.startCall()\n            .then(({ publishers, subscribers, meta }) => {\n                this.setState({ publishers, subscribers, meta, active: true });\n            }).catch(error => console.log(error));\n    }\n\n    endCall() {\n        otCore.endCall();\n        this.setState({ active: false });\n    }\n\n    toggleLocalAudio() {\n        otCore.toggleLocalAudio(!this.state.localAudioEnabled);\n        this.setState({ localAudioEnabled: !this.state.localAudioEnabled });\n    }\n\n    toggleLocalVideo() {\n        otCore.toggleLocalVideo(!this.state.localVideoEnabled);\n        this.setState({ localVideoEnabled: !this.state.localVideoEnabled });\n    }\n\n    render() {\n        const { connected, active } = this.state;\n        const {\n            localAudioClass,\n            localVideoClass,\n            localCallClass,\n            controlClass,\n            cameraPublisherClass,\n            screenPublisherClass,\n            cameraSubscriberClass,\n            screenSubscriberClass,\n        } = containerClasses(this.state);\n\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h1>OpenTok Accelerator Core</h1>\n                </div>\n                <div className=\"App-main\">\n                    <div className=\"App-video-container\">\n                        { !connected && connectingMask() }\n                        { connected && !active && startCallMask(this.startCall)}\n                        <div id=\"cameraPublisherContainer\" className={cameraPublisherClass} />\n                        <div id=\"screenPublisherContainer\" className={screenPublisherClass} />\n                        <div id=\"cameraSubscriberContainer\" className={cameraSubscriberClass} />\n                        <div id=\"screenSubscriberContainer\" className={screenSubscriberClass} />\n                    </div>\n                    <div style={{ position: 'absolute', bottom: 0, width: '100%' }}>\n                        <div id=\"controls\" className={controlClass}>\n                            <div className={localAudioClass} onClick={this.toggleLocalAudio} />\n                            <div className={localVideoClass} onClick={this.toggleLocalVideo} />\n                            <div className={localCallClass} onClick={this.endCall} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}